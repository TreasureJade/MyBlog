<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.by.blog.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.by.blog.entity.Comment">
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="blog_id" jdbcType="BIGINT" property="blogId" />
    <result column="reply_user_id" jdbcType="BIGINT" property="replyUserId" />
    <result column="pid" jdbcType="BIGINT" property="pid" />
    <result column="comment_msg" jdbcType="VARCHAR" property="commentMsg" />
    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.by.blog.entity.Comment">
    insert into comment (comment_id, user_id, blog_id,
      reply_user_id, pid, comment_msg, 
      creat_time)
    values (#{commentId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{blogId,jdbcType=BIGINT},
      #{replyUserId,jdbcType=BIGINT}, #{pid,jdbcType=BIGINT}, #{commentMsg,jdbcType=VARCHAR}, 
      #{creatTime,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.by.blog.entity.Comment">
    update comment
    set user_id = #{userId,jdbcType=BIGINT},
      blog_id = #{blogId,jdbcType=BIGINT},
      reply_user_id = #{replyUserId,jdbcType=BIGINT},
      pid = #{pid,jdbcType=BIGINT},
      comment_msg = #{commentMsg,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=VARCHAR}
    where comment_Id = #{commentId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select comment_id, user_id, blog_id, reply_user_id, pid, comment_msg, creat_time
    from comment
    where commentId = #{commentId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select comment_id, user_id, blog_id, reply_user_id, pid, comment_msg, creat_time
    from comment
  </select>
  <select id="getCommentIdByBlogId" resultType="java.lang.Long">
    select comment_id from comment
    where blog_id = #{blogId} and pid =0
  </select>
  <select id="selectCommentById" resultType="com.by.blog.vo.CommentVO">
   SELECT u.user_id,u.username,u.head_portrait ,c.comment_id,c.comment_msg,c.creat_time
		FROM  comment c
		LEFT JOIN  user u on c.user_id = u.user_id
		where c.comment_id = #{id}
  </select>
  <select id="selectByPid" resultType="com.by.blog.vo.ReplyVO">
    SELECT u.user_id,u.username,u.head_portrait ,c.comment_id,c.comment_msg,c.creat_time,c.reply_user_id
    FROM
	user  u,
	comment c
    WHERE u.user_id = c.user_id
    and c.pid = #{pid}
  </select>
</mapper>